{
  "swagger": "2.0",
  "info": {
    "title": "Open Bank Project API",
    "description": "An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2016. Licensed under the AGPL and commercial licences.",
    "contact": {
      "name": "TESOBE Ltd. / Open Bank Project",
      "url": "https://openbankproject.com",
      "email": "contact@tesobe.com"
    },
    "version": "v3.0.0"
  },
  "host": "available.openbankproject.com",
  "basePath": "/obp/v3.0.0",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "directLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "directLogin": []
    }
  ],
  "paths": {
    "/banks": {
      "get": {
        "tags": [
          "1_2_1"
        ],
        "summary": "Get Banks",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Get banks on this API instance\nReturns a list of banks supported on this server:\n\n* ID used as parameter in URLs\n* Short and full name of bank\n* Logo URL\n* Website",
        "operationId": "v1_2_1-getBanks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BanksJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUnknownError"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}": {
      "get": {
        "tags": [
          "1_2_1"
        ],
        "summary": "Get Bank",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Get the bank specified by BANK_ID\nReturns information about a single bank specified by BANK_ID including:\n\n* Short and full name of bank\n* Logo URL\n* Website",
        "operationId": "v1_2_1-bankById",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BankJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account": {
      "get": {
        "tags": [
          "3_0_0"
        ],
        "summary": "Get Account by Id (Full)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):\n\n* Number\n* Owners\n* Type\n* Balance\n* IBAN\n* Available views (sorted by short_name)\n\nMore details about the data moderation by the view [here](#1_2_1-getViewsForBankAccount).\n\nPSD2 Context: PSD2 requires customers to have access to their account information via third party applications.\nThis call provides balance and other account information via delegated authenticaiton using OAuth.\n\nAuthentication is required if the 'is_public' field in view (VIEW_ID) is not set to `true`.\n",
        "operationId": "v3_0_0-accountById",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModeratedAccountJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorBankNotFound"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge": {
      "post": {
        "tags": [
          "3_0_0"
        ],
        "summary": "Answer Transaction Request Challenge.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.",
        "operationId": "v3_0_0-answerTransactionRequestChallenge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeAnswerJSON"
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_ID",
            "description": "The transaction request id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_TYPE",
            "description": "The transaction request type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJson"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/TRANSFER_TO_PHONE/transaction-requests": {
      "post": {
        "tags": [
          "3_0_0"
        ],
        "summary": "Create Transaction Request TRANSFER_TO_PHONE",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Initiate a Payment via creating a Transaction Request.\n\nIn OBP, a `transaction request` may or may not result in a `transaction`. However, a `transaction` only has one possible state: completed.\n\nA `Transaction Request` can have one of several states.\n\n`Transactions` are modeled on items in a bank statement that represent the movement of money.\n\n`Transaction Requests` are requests to move money which may or may not succeeed and thus result in a `Transaction`.\n\nA `Transaction Request` might create a security challenge that needs to be answered before the `Transaction Request` proceeds.\n\nTransaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).\n\nTransaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.\nThis provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.\n\nThe payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.\n\nThe payee is set in the request body. Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.\n\nIn sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.\n\nIn sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.\n\nIf a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.\n\nYou can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.\n\nThe following static FX rates are available in sandbox mode:\n\n{\n  \"XAF\":{\n    \"AUD\":0.00228226,\n    \"KRW\":1.87975,\n    \"JOD\":0.00127784,\n    \"GBP\":0.00131092,\n    \"AED\":0.00601555,\n    \"INR\":0.110241,\n    \"JPY\":0.185328,\n    \"USD\":0.00163773,\n    \"ILS\":0.00641333,\n    \"EUR\":0.00152449\n  },\n  \"AUD\":{\n    \"XAF\":438.162,\n    \"KRW\":895.304,\n    \"JOD\":0.556152,\n    \"GBP\":0.609788,\n    \"AED\":2.88368,\n    \"INR\":50.4238,\n    \"JPY\":87.0936,\n    \"USD\":0.785256,\n    \"ILS\":2.83558,\n    \"EUR\":0.667969\n  },\n  \"KRW\":{\n    \"XAF\":0.531986,\n    \"AUD\":0.00111694,\n    \"JOD\":6.30634E-4,\n    \"GBP\":6.97389E-4,\n    \"AED\":0.00320019,\n    \"INR\":0.0586469,\n    \"JPY\":0.0985917,\n    \"USD\":8.7125E-4,\n    \"ILS\":0.00316552,\n    \"EUR\":8.11008E-4\n  },\n  \"JOD\":{\n    \"XAF\":782.572,\n    \"AUD\":1.63992,\n    \"KRW\":1585.68,\n    \"GBP\":1.06757,\n    \"AED\":5.18231,\n    \"INR\":90.1236,\n    \"JPY\":156.304,\n    \"USD\":1.41112,\n    \"ILS\":5.02018,\n    \"EUR\":0.237707\n  },\n  \"GBP\":{\n    \"XAF\":762.826,\n    \"AUD\":1.63992,\n    \"KRW\":1433.92,\n    \"JOD\":0.936707,\n    \"AED\":4.58882,\n    \"INR\":84.095,\n    \"JPY\":141.373,\n    \"USD\":1.2493,\n    \"ILS\":4.7002,\n    \"EUR\":1.16278\n  },\n  \"AED\":{\n    \"XAF\":166.236,\n    \"AUD\":0.346779,\n    \"KRW\":312.482,\n    \"GBP\":0.217921,\n    \"AED\":0.192964,\n    \"INR\":18.3255,\n    \"JPY\":30.8081,\n    \"USD\":0.27225,\n    \"ILS\":0.968033,\n    \"EUR\":0.253425\n  },\n  \"INR\":{\n    \"XAF\":9.07101,\n    \"AUD\":0.0198319,\n    \"KRW\":17.0512,\n    \"JOD\":0.0110959,\n    \"GBP\":0.0118913,\n    \"AED\":0.0545671,\n    \"JPY\":1.68111,\n    \"USD\":0.0148559,\n    \"ILS\":0.0556764,\n    \"EUR\":0.0138287\n  },\n  \"JPY\":{\n    \"XAF\":5.39585,\n    \"AUD\":0.0114819,\n    \"KRW\":10.1428,\n    \"JOD\":0.00639777,\n    \"GBP\":0.0070735,\n    \"AED\":0.032459,\n    \"INR\":0.594846,\n    \"USD\":0.00883695,\n    \"ILS\":0.0320926,\n    \"EUR\":0.00822592\n  },\n  \"USD\":{\n    \"XAF\":610.601,\n    \"AUD\":1.27347,\n    \"KRW\":1147.78,\n    \"JOD\":0.708659,\n    \"GBP\":0.800446,\n    \"AED\":3.6731,\n    \"INR\":67.3135,\n    \"JPY\":113.161,\n    \"ILS\":3.55495,\n    \"EUR\":0.930886\n  },\n  \"ILS\":{\n    \"XAF\":155.925,\n    \"AUD\":0.352661,\n    \"KRW\":315.903,\n    \"JOD\":0.199196,\n    \"GBP\":0.212763,\n    \"AED\":1.03302,\n    \"INR\":17.9609,\n    \"JPY\":31.1599,\n    \"USD\":0.281298,\n    \"EUR\":1.19318\n  },\n  \"EUR\":{\n    \"XAF\":655.957,\n    \"AUD\":1.49707,\n    \"KRW\":1233.03,\n    \"JOD\":0.838098,\n    \"GBP\":0.860011,\n    \"AED\":3.94594,\n    \"INR\":72.3136,\n    \"JPY\":121.567,\n    \"USD\":1.07428,\n    \"ILS\":4.20494\n  }\n}\n\n\nTransaction Requests satisfy PSD2 requirements thus:\n\n1) A transaction can be initiated by a third party application.\n\n2) The customer is informed of the charge that will incurred.\n\n3) The call supports delegated authentication (OAuth)\n\nSee [this python code](https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py) for a complete example of this flow.\n\nThere is further documentation [here](https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests)\n\nAuthentication is Mandatory\n\n\n\nSpecial instructions for TRANSFER_TO_PHONE:\n\nWhen using a TRANSFER_TO_PHONE, the following fields need to be filling in Json Body\nfrom_account_owner_nickname : Nickname of the money sender (20 symbols)\nfrom_account_phone_number   : Mobile number of the money sender (10 digits)\nother_account_phone_number  : Mobile number of the money receiver (10 digits)\nother_account_message       : Message text to the money receiver (50 symbols)\n       ",
        "operationId": "v3_0_0-createTransactionRequestTransferToPhone",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodyTransferToPhoneJson"
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions": {
      "get": {
        "tags": [
          "3_0_0"
        ],
        "summary": "Get Transactions for Account (Full)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Returns transactions list of the account specified by ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication via OAuth is required if the view is not public.\n\nPossible custom headers for pagination:\n\n* obp_sort_by=CRITERIA ==> default value: \"completed\" field\n* obp_sort_direction=ASC/DESC ==> default value: DESC\n* obp_limit=NUMBER ==> default value: 50\n* obp_offset=NUMBER ==> default value: 0\n* obp_from_date=DATE => default value: date of the oldest transaction registered (format below)\n* obp_to_date=DATE => default value: date of the newest transaction registered (format below)\n\n**Date format parameter**: \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" (2014-07-01T00:00:00.000Z) ==> time zone is UTC.",
        "operationId": "v3_0_0-getTransactionsForBankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionsJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorFilterSortDirectionError"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction": {
      "get": {
        "tags": [
          "1_2_1"
        ],
        "summary": "Get Transaction by Id.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and [moderated](#1_2_1-getViewsForBankAccount) by the view (VIEW_ID).\n\nAuthentication is Optional\nAuthentication is required if the view is not public.\n\n\n",
        "operationId": "v1_2_1-getTransactionByIdForBankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "TRANSACTION_ID",
            "description": "The transaction id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorBankAccountNotFound"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/private": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get private accounts at one bank (Authenticated access).",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "Returns the list of private (non-public) accounts at BANK_ID that the user has access to.\nFor each account the API returns the ID and the available views.\n\nIf you want to see more information on the Views, use the Account Detail call.\nIf you want less information about the account, use the /my accounts call\n\n\nAuthentication is Mandatory",
        "operationId": "v2_0_0-privateAccountsAtOneBank",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BasicAccountsJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorHostnameNotSpecified": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00001: Hostname not specified. Could not get hostname from Props. Please edit your props file. Here are some example settings: hostname=http://127.0.0.1:8080 or hostname=https://www.example.com"
        }
      }
    },
    "ErrorDataImportDisabled": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00002: Data import is disabled for this API instance."
        }
      }
    },
    "ErrorTransactionDisabled": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00003: Transaction Requests is disabled in this API instance."
        }
      }
    },
    "ErrorServerAddDataError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00004: Server error: could not add message"
        }
      }
    },
    "ErrorPublicViewsNotAllowedOnThisInstance": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00005: Public views not allowed on this instance. Please set allow_public_views = true in props files. "
        }
      }
    },
    "ErrorRemoteDataSecretMatchError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00006: Remote data secret cannot be matched! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret."
        }
      }
    },
    "ErrorRemoteDataSecretObtainError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00007: Remote data secret cannot be obtained! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret."
        }
      }
    },
    "ErrorInvalidJsonFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10001: Incorrect json format."
        }
      }
    },
    "ErrorInvalidNumber": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10002: Invalid Number. Could not convert value to a number."
        }
      }
    },
    "ErrorInvalidISOCurrencyCode": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. "
        }
      }
    },
    "ErrorFXCurrencyCodeCombinationsNotSupported": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. "
        }
      }
    },
    "ErrorInvalidDateFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10005: Invalid Date Format. Could not convert value to a Date."
        }
      }
    },
    "ErrorInvalidInputJsonFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10006: Invalid input JSON format."
        }
      }
    },
    "ErrorIncorrectRoleName": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10007: Incorrect Role name: "
        }
      }
    },
    "ErrorCouldNotTransformJsonToInternalModel": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10008: Could not transform Json to internal model."
        }
      }
    },
    "ErrorCountNotSaveOrUpdateResource": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10009: Could not save or update resource."
        }
      }
    },
    "ErrorNotImplemented": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10010: Not Implemented "
        }
      }
    },
    "ErrorFilterSortDirectionError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!"
        }
      }
    },
    "ErrorFilterOffersetError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!"
        }
      }
    },
    "ErrorFilterLimitError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!"
        }
      }
    },
    "ErrorFilterDateFormatError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z' or that one yyyy-MM-dd'T'HH:mm:ss.SSSZ!"
        }
      }
    },
    "ErrorUserNotLoggedIn": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20001: User not logged in. Authentication is required!"
        }
      }
    },
    "ErrorDirectLoginMissingParameters": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20002: These DirectLogin parameters are missing: "
        }
      }
    },
    "ErrorDirectLoginInvalidToken": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20003: This DirectLogin token is invalid or expired: "
        }
      }
    },
    "ErrorInvalidLoginCredentials": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20004: Invalid login credentials. Check username/password."
        }
      }
    },
    "ErrorUserNotFoundById": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20005: User not found. Please specify a valid value for USER_ID."
        }
      }
    },
    "ErrorUserHasMissingRoles": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20006: User is missing one or more roles: "
        }
      }
    },
    "ErrorUserNotFoundByEmail": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20007: User not found by email."
        }
      }
    },
    "ErrorInvalidConsumerKey": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20008: Invalid Consumer Key."
        }
      }
    },
    "ErrorInvalidConsumerCredentials": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20009: Invalid consumer credentials"
        }
      }
    },
    "ErrorInvalidValueLength": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20010: Value too long"
        }
      }
    },
    "ErrorInvalidValueCharacters": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20011: Value contains invalid characters"
        }
      }
    },
    "ErrorInvalidDirectLoginParameters": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20012: Invalid direct login parameters"
        }
      }
    },
    "ErrorUsernameHasBeenLocked": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20013: The account has been locked, please contact administrator !"
        }
      }
    },
    "ErrorInvalidConsumerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID."
        }
      }
    },
    "ErrorUserNoPermissionUpdateConsumer": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20015: Only the developer that created the consumer key should be able to edit it, please login with the right user."
        }
      }
    },
    "ErrorUnexpectedErrorDuringLogin": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20016: An unexpected login error occurred. Please try again."
        }
      }
    },
    "ErrorUserNoPermissionAccessView": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID."
        }
      }
    },
    "ErrorInvalidInternalRedirectUrl": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20018: Login failed, invalid internal redirectUrl."
        }
      }
    },
    "ErrorUserNotFoundByUsername": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20027: User not found by username."
        }
      }
    },
    "ErrorGatewayLoginMissingParameters": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20028: These GatewayLogin parameters are missing: "
        }
      }
    },
    "ErrorGatewayLoginUnknownError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20029: Unknown Gateway login error."
        }
      }
    },
    "ErrorGatewayLoginHostPropertyMissing": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20030: Property gateway.host is not defined."
        }
      }
    },
    "ErrorGatewayLoginWhiteListAddresses": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20031: Gateway login can be done only from allowed addresses."
        }
      }
    },
    "ErrorGatewayLoginJwtTokenIsNotValid": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20040: The JWT is corrupted/changed during a transport."
        }
      }
    },
    "ErrorGatewayLoginCannotExtractJwtToken": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20040: Header, Payload and Signature cannot be extracted from the JWT."
        }
      }
    },
    "ErrorBankNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
        }
      }
    },
    "ErrorCustomerNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_NUMBER."
        }
      }
    },
    "ErrorCustomerNotFoundByCustomerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_ID."
        }
      }
    },
    "ErrorAccountNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID."
        }
      }
    },
    "ErrorCounterpartyNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30004: Counterparty not found. The BANK_ID / ACCOUNT_ID specified does not exist on this server."
        }
      }
    },
    "ErrorViewNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID"
        }
      }
    },
    "ErrorCustomerNumberAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER."
        }
      }
    },
    "ErrorCustomerAlreadyExistsForUser": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID"
        }
      }
    },
    "ErrorUserCustomerLinksNotFoundForUser": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30008: User Customer Link not found by USER_ID"
        }
      }
    },
    "ErrorAtmNotFoundByAtmId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30009: ATM not found. Please specify a valid value for ATM_ID."
        }
      }
    },
    "ErrorBranchNotFoundByBranchId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID."
        }
      }
    },
    "ErrorProductNotFoundByProductCode": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE."
        }
      }
    },
    "ErrorCounterpartyNotFoundByIban": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30012: Counterparty not found. Please specify a valid value for IBAN."
        }
      }
    },
    "ErrorCounterpartyBeneficiaryPermit": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30013: The account can not send money to the Counterparty. Please set the Counterparty 'isBeneficiary' true first"
        }
      }
    },
    "ErrorCounterpartyAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME."
        }
      }
    },
    "ErrorCreateBranchError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30015: Could not insert the Branch"
        }
      }
    },
    "ErrorUpdateBranchError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30016: Could not update the Branch"
        }
      }
    },
    "ErrorCounterpartyNotFoundByCounterpartyId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID."
        }
      }
    },
    "ErrorBankAccountNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. "
        }
      }
    },
    "ErrorConsumerNotFoundByConsumerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID."
        }
      }
    },
    "ErrorCreateBankError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30020: Could not create the Bank"
        }
      }
    },
    "ErrorUpdateBankError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30021: Could not update the Bank"
        }
      }
    },
    "ErrorViewNoPermission": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30022: The current view does not have the permission: "
        }
      }
    },
    "ErrorUpdateConsumerError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30023: Cannot update Consumer "
        }
      }
    },
    "ErrorCreateConsumerError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30024: Could not create Consumer "
        }
      }
    },
    "ErrorCreateUserCustomerLinksError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30025: Could not create user_customer_links "
        }
      }
    },
    "ErrorConsumerKeyAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30026: Consumer Key already exists. Please specify a different value."
        }
      }
    },
    "ErrorNoExistingAccountHolders": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30027: Account Holders not found. The BANK_ID / ACCOUNT_ID specified for account holder does not exist on this server"
        }
      }
    },
    "ErrorCreateAtmError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30028: Could not insert the ATM"
        }
      }
    },
    "ErrorUpdateAtmError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30029: Could not update the ATM"
        }
      }
    },
    "ErrorCreateProductError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30030: Could not insert the Product"
        }
      }
    },
    "ErrorUpdateProductError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30031: Could not update the Product"
        }
      }
    },
    "ErrorCreateCardError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30032: Could not insert the Card"
        }
      }
    },
    "ErrorUpdateCardError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30033: Could not update the Card"
        }
      }
    },
    "ErrorViewIdNotSupported": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30034: This ViewId is do not supported. Only support four now: Owner, Public, Accountant, Auditor."
        }
      }
    },
    "ErrorUserCustomerLinkNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30035: User Customer Link not found"
        }
      }
    },
    "ErrorMeetingsNotSupported": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30101: Meetings are not supported on this server."
        }
      }
    },
    "ErrorMeetingApiKeyNotConfigured": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30102: Meeting provider API Key is not configured."
        }
      }
    },
    "ErrorMeetingApiSecretNotConfigured": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30103: Meeting provider Secret is not configured."
        }
      }
    },
    "ErrorMeetingNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30104: Meeting not found."
        }
      }
    },
    "ErrorInvalidAccountBalanceCurrency": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30105: Invalid Balance Currency."
        }
      }
    },
    "ErrorInvalidAccountBalanceAmount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30106: Invalid Balance Amount."
        }
      }
    },
    "ErrorInvalidUserId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30107: Invalid User Id."
        }
      }
    },
    "ErrorInvalidAccountType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30108: Invalid Account Type."
        }
      }
    },
    "ErrorInitialBalanceMustBeZero": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30109: Initial Balance of Account must be Zero (0)."
        }
      }
    },
    "ErrorInvalidAccountIdFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
        }
      }
    },
    "ErrorInvalidBankIdFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
        }
      }
    },
    "ErrorInvalidAccountInitialBalance": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00"
        }
      }
    },
    "ErrorEntitlementIsBankRole": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id."
        }
      }
    },
    "ErrorEntitlementIsSystemRole": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string."
        }
      }
    },
    "ErrorInvalidStrongPasswordFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR be longer than 16 characters."
        }
      }
    },
    "ErrorAccountIdAlreadyExsits": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30208: Account_ID already exists at the Bank."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateBranch": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateBank": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank."
        }
      }
    },
    "ErrorInvalidTransactionRequestType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE"
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateTransactionRequest": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest."
        }
      }
    },
    "ErrorInvalidTransactionRequestCurrency": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40003: Transaction Request Currency must be the same as From Account Currency."
        }
      }
    },
    "ErrorInvalidTransactionRequestId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40004: Transaction Request Id not found."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateTransactionType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don't have access to CanCreateTransactionType."
        }
      }
    },
    "ErrorCreateTransactionTypeInsertError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40006: Could not insert Transaction Type: Non unique BANK_ID / SHORT_CODE"
        }
      }
    },
    "ErrorCreateTransactionTypeUpdateError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40007: Could not update Transaction Type: Non unique BANK_ID / SHORT_CODE"
        }
      }
    },
    "ErrorNotPositiveAmount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40008: Can't send a payment with a value of 0 or less."
        }
      }
    },
    "ErrorTransactionRequestTypeHasChanged": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40009: The TRANSACTION_REQUEST_TYPE has changed."
        }
      }
    },
    "ErrorInvalidTransactionRequesChallengeId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40010: Invalid Challenge Id. Please specify a valid value for CHALLENGE_ID."
        }
      }
    },
    "ErrorTransactionRequestStatusNotInitiated": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40011: Transaction Request Status is not INITIATED."
        }
      }
    },
    "ErrorCounterpartyNotFoundOtherAccountProvider": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40012: Please set up the otherAccountRoutingScheme and otherBankRoutingScheme fields of the Counterparty to 'OBP'"
        }
      }
    },
    "ErrorInvalidChargePolicy": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40013: Invalid Charge Policy. Please specify a valid value for Charge_Policy: SHARED, SENDER or RECEIVER. "
        }
      }
    },
    "ErrorAllowedAttemptsUsedUp": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40014: Sorry, you've used up your allowed attempts. "
        }
      }
    },
    "ErrorInvalidChallengeType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40015: Invalid Challenge Type. Please specify a valid value for CHALLENGE_TYPE, when you create the transaction request."
        }
      }
    },
    "ErrorInvalidChallengeAnswer": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40016: Invalid Challenge Answer. Please specify a valid value for answer in Json body."
        }
      }
    },
    "ErrorInvalidPhoneNumber": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40017: Invalid Phone Number. Please specify a valid value for PHONE_NUMBER. Eg:+9722398746 "
        }
      }
    },
    "ErrorUnknownError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50000: Unknown Error."
        }
      }
    },
    "ErrorFutureTimeoutException": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50001: Future Timeout Exception."
        }
      }
    },
    "ErrorKafkaMessageClassCastException": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50002: Kafka Response Message Class Cast Exception."
        }
      }
    },
    "ErrorAdapterOrCoreBankingSystemException": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50003: Adapter Or Core Banking System Exception. Failed to get a valid response from the south side Adapter or Core Banking System."
        }
      }
    },
    "ErrorCurrentUserNotFoundException": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50004: Method (AuthUser.getCurrentUser) can not find the current user in the current context!"
        }
      }
    },
    "ErrorConnectorEmptyResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50200: Connector cannot return the data we requested."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetBankAccounts": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50201: Connector did not return the set of accounts we requested."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetBankAccount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50202: Connector did not return the account we requested."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetTransaction": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50203: Connector did not return the transaction we requested."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetTransactions": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50204: Connector did not return the set of transactions we requested."
        }
      }
    },
    "ErrorallFields": {
      "properties": {
        "message": {
          "type": "string",
          "example": "null"
        }
      }
    },
    "EmptyClassJson": {
      "properties": {}
    },
    "ChallengeAnswerJSON": {
      "required": [
        "id",
        "answer"
      ],
      "properties": {
        "answer": {
          "type": "string",
          "example": "good"
        },
        "id": {
          "type": "string",
          "example": "b20dd004-93e3-494f-8773-69e3ff8c205e"
        }
      }
    },
    "TransactionRequestBodyTransferToPhoneJson": {
      "required": [
        "value",
        "description",
        "from_account_phone_number",
        "from_account_owner_nickname",
        "couterparty"
      ],
      "properties": {
        "couterparty": {
          "$ref": "#/definitions/CounterpartyTransferToPhoneJson"
        },
        "description": {
          "type": "string",
          "example": "This is a TRANSFER_TO_PHONE Transaction Request"
        },
        "from_account_owner_nickname": {
          "type": "string",
          "example": "Tom"
        },
        "from_account_phone_number": {
          "type": "string",
          "example": "+9722398712"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "License": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "id"
        }
      }
    },
    "Routing": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "123abc"
        },
        "scheme": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "BranchId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "AmountOfMoney": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "100"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "CreateViewJson": {
      "required": [
        "name",
        "description",
        "is_public",
        "which_alias_to_use",
        "hide_metadata_if_alias_used",
        "allowed_actions"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "false"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "good"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateViewJSON": {
      "required": [
        "description",
        "is_public",
        "which_alias_to_use",
        "hide_metadata_if_alias_used",
        "allowed_actions"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "good"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "good"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransactionTypeId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "BankId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "gh.uk.9j"
        }
      }
    },
    "TransactionRequestId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "CounterpartyId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "AccountId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "ViewId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "owner"
        }
      }
    },
    "TransactionType": {
      "required": [
        "id",
        "bankId",
        "shortCode",
        "summary",
        "description",
        "charge"
      ],
      "properties": {
        "shortCode": {
          "type": "string",
          "example": "80080"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "id": {
          "$ref": "#/definitions/TransactionTypeId"
        },
        "charge": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "bankId": {
          "$ref": "#/definitions/BankId"
        },
        "summary": {
          "type": "string",
          "example": "good"
        }
      }
    },
    "TransactionRequestCharge": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "summary": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestChallenge": {
      "required": [
        "id",
        "allowed_attempts",
        "challenge_type"
      ],
      "properties": {
        "challenge_type": {
          "type": "string",
          "example": "String"
        },
        "allowed_attempts": {
          "type": "integer",
          "format": "int32",
          "example": "4"
        },
        "id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestAccount": {
      "required": [
        "bank_id",
        "account_id"
      ],
      "properties": {
        "account_id": {
          "type": "string",
          "example": "String"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestBody": {
      "required": [
        "to",
        "value",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccount"
        }
      }
    },
    "TransactionRequest": {
      "required": [
        "id",
        "type",
        "from",
        "details",
        "body",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge",
        "charge",
        "charge_policy",
        "counterparty_id",
        "name",
        "this_bank_id",
        "this_account_id",
        "this_view_id",
        "other_account_routing_scheme",
        "other_account_routing_address",
        "other_bank_routing_scheme",
        "other_bank_routing_address",
        "is_beneficiary"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "String"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "String"
        },
        "body": {
          "$ref": "#/definitions/TransactionRequestBody"
        },
        "challenge": {
          "$ref": "#/definitions/TransactionRequestChallenge"
        },
        "name": {
          "type": "string",
          "example": "String"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "$ref": "#/definitions/TransactionRequestId"
        },
        "this_account_id": {
          "$ref": "#/definitions/AccountId"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "status": {
          "type": "string",
          "example": "String"
        },
        "charge_policy": {
          "type": "string",
          "example": "String"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccount"
        },
        "this_view_id": {
          "$ref": "#/definitions/ViewId"
        },
        "details": {
          "type": "string",
          "example": ""
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestCharge"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "String"
        },
        "this_bank_id": {
          "$ref": "#/definitions/BankId"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "counterparty_id": {
          "$ref": "#/definitions/CounterpartyId"
        },
        "transaction_ids": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MessageDocJson": {
      "required": [
        "process",
        "message_format",
        "description",
        "example_outbound_message",
        "example_inbound_message"
      ],
      "properties": {
        "example_inbound_message": {
          "type": "string",
          "example": ""
        },
        "description": {
          "type": "string",
          "example": "get Banks"
        },
        "process": {
          "type": "string",
          "example": "getBanks"
        },
        "message_format": {
          "type": "string",
          "example": "KafkaV2017"
        },
        "example_outbound_message": {
          "type": "string",
          "example": ""
        }
      }
    },
    "MessageDocsJson": {
      "required": [
        "messageDocs"
      ],
      "properties": {
        "messageDocs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageDocJson"
          }
        }
      }
    },
    "MakePaymentJson": {
      "required": [
        "bank_id",
        "account_id",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "String"
        },
        "account_id": {
          "type": "string",
          "example": "String"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionIdJson": {
      "required": [
        "transaction_id"
      ],
      "properties": {
        "transaction_id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "HostedBy": {
      "required": [
        "organisation",
        "email",
        "phone"
      ],
      "properties": {
        "phone": {
          "type": "string",
          "example": "String"
        },
        "email": {
          "type": "string",
          "example": "String"
        },
        "organisation": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "Akka": {
      "properties": {
        "remote_data_secret_matched": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "APIInfoJSON": {
      "required": [
        "version",
        "version_status",
        "git_commit",
        "connector",
        "hosted_by",
        "akka"
      ],
      "properties": {
        "akka": {
          "$ref": "#/definitions/Akka"
        },
        "version_status": {
          "type": "string",
          "example": "String"
        },
        "version": {
          "type": "string",
          "example": "String"
        },
        "connector": {
          "type": "string",
          "example": "String"
        },
        "hosted_by": {
          "$ref": "#/definitions/HostedBy"
        },
        "git_commit": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ErrorMessage": {
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostTransactionImageJSON": {
      "required": [
        "label",
        "URL"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "String"
        },
        "label": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostTransactionCommentJSON": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostTransactionTagJSON": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "AliasJSON": {
      "required": [
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MoreInfoJSON": {
      "required": [
        "more_info"
      ],
      "properties": {
        "more_info": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "UrlJSON": {
      "required": [
        "URL"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ImageUrlJSON": {
      "required": [
        "image_URL"
      ],
      "properties": {
        "image_URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "OpenCorporateUrlJSON": {
      "required": [
        "open_corporates_URL"
      ],
      "properties": {
        "open_corporates_URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "AccountRoutingJsonV121": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "DE89 3704 0044 0532 0130 00"
        },
        "scheme": {
          "type": "string",
          "example": "IBAN"
        }
      }
    },
    "AmountOfMoneyJsonV121": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "10"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "UserJSONV121": {
      "required": [
        "id",
        "provider",
        "display_name"
      ],
      "properties": {
        "display_name": {
          "type": "string",
          "example": "OBP"
        },
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "ViewJSONV121": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public",
        "alias",
        "hide_metadata_if_alias_used",
        "can_add_comment",
        "can_add_corporate_location",
        "can_add_image",
        "can_add_image_url",
        "can_add_more_info",
        "can_add_open_corporates_url",
        "can_add_physical_location",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_add_tag",
        "can_add_url",
        "can_add_where_tag",
        "can_delete_comment",
        "can_delete_corporate_location",
        "can_delete_image",
        "can_delete_physical_location",
        "can_delete_tag",
        "can_delete_where_tag",
        "can_edit_owner_comment",
        "can_see_bank_account_balance",
        "can_see_bank_account_bank_name",
        "can_see_bank_account_currency",
        "can_see_bank_account_iban",
        "can_see_bank_account_label",
        "can_see_bank_account_national_identifier",
        "can_see_bank_account_number",
        "can_see_bank_account_owners",
        "can_see_bank_account_swift_bic",
        "can_see_bank_account_type",
        "can_see_comments",
        "can_see_corporate_location",
        "can_see_image_url",
        "can_see_images",
        "can_see_more_info",
        "can_see_open_corporates_url",
        "can_see_other_account_bank_name",
        "can_see_other_account_iban",
        "can_see_other_account_kind",
        "can_see_other_account_metadata",
        "can_see_other_account_national_identifier",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_see_owner_comment",
        "can_see_physical_location",
        "can_see_private_alias",
        "can_see_public_alias",
        "can_see_tags",
        "can_see_transaction_amount",
        "can_see_transaction_balance",
        "can_see_transaction_currency",
        "can_see_transaction_description",
        "can_see_transaction_finish_date",
        "can_see_transaction_metadata",
        "can_see_transaction_other_bank_account",
        "can_see_transaction_start_date",
        "can_see_transaction_this_bank_account",
        "can_see_transaction_type",
        "can_see_url",
        "can_see_where_tag"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "None"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ViewsJSONV121": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        }
      }
    },
    "AccountJSON": {
      "required": [
        "id",
        "label",
        "views_available",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.uk.db"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "label": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "AccountsJSON": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountJSON"
          }
        }
      }
    },
    "BankRoutingJsonV121": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "scheme": {
          "type": "string",
          "example": "Bank_ID"
        }
      }
    },
    "BankJSON": {
      "required": [
        "id",
        "short_name",
        "full_name",
        "logo",
        "website",
        "bank_routing"
      ],
      "properties": {
        "website": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "full_name": {
          "type": "string",
          "example": "full_name"
        },
        "logo": {
          "type": "string",
          "example": "logo"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "short_name": {
          "type": "string",
          "example": "short_name "
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        }
      }
    },
    "BanksJSON": {
      "required": [
        "banks"
      ],
      "properties": {
        "banks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankJSON"
          }
        }
      }
    },
    "AccountHolderJSON": {
      "required": [
        "name",
        "is_alias"
      ],
      "properties": {
        "is_alias": {
          "type": "boolean",
          "example": "true"
        },
        "name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "MinimalBankJSON": {
      "required": [
        "national_identifier",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "national_identifier": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "ModeratedAccountJSON": {
      "required": [
        "id",
        "label",
        "number",
        "owners",
        "type",
        "balance",
        "IBAN",
        "swift_bic",
        "views_available",
        "bank_id",
        "account_routing"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "IBAN": {
          "type": "string",
          "example": "DE89 3704 0044 0532 0130 00"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "swift_bic": {
          "type": "string",
          "example": "OKOYFIHH"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "type": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "ThisAccountJSON": {
      "required": [
        "id",
        "holders",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK1234AD"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK1234AD"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "holders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountHolderJSON"
          }
        },
        "kind": {
          "type": "string",
          "example": "AC"
        }
      }
    },
    "LocationJSONV121": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        }
      }
    },
    "OtherAccountMetadataJSON": {
      "required": [
        "public_alias",
        "private_alias",
        "more_info",
        "URL",
        "image_URL",
        "open_corporates_URL",
        "corporate_location",
        "physical_location"
      ],
      "properties": {
        "public_alias": {
          "type": "string",
          "example": "NONE"
        },
        "image_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "physical_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "private_alias": {
          "type": "string",
          "example": "NONE"
        },
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "more_info": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "corporate_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "open_corporates_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        }
      }
    },
    "OtherAccountJSON": {
      "required": [
        "id",
        "holder",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank",
        "metadata"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK234DB"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK12321DB"
        },
        "holder": {
          "$ref": "#/definitions/AccountHolderJSON"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "metadata": {
          "$ref": "#/definitions/OtherAccountMetadataJSON"
        },
        "kind": {
          "type": "string",
          "example": "3456"
        }
      }
    },
    "TransactionDetailsJSON": {
      "required": [
        "type",
        "description",
        "posted",
        "completed",
        "new_balance",
        "value"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "GOOD"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "TransactionImageJSON": {
      "required": [
        "id",
        "label",
        "URL",
        "date",
        "user"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "label": {
          "type": "string",
          "example": "NONE"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "TransactionImagesJSON": {
      "required": [
        "images"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        }
      }
    },
    "TransactionCommentJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "TransactionTagJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "TransactionTagsJSON": {
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTagJSON"
          }
        }
      }
    },
    "TransactionMetadataJSON": {
      "required": [
        "narrative",
        "comments",
        "tags",
        "images",
        "where"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "NONE"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTagJSON"
          }
        },
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "TransactionJSON": {
      "required": [
        "id",
        "this_account",
        "other_account",
        "details",
        "metadata"
      ],
      "properties": {
        "this_account": {
          "$ref": "#/definitions/ThisAccountJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "details": {
          "$ref": "#/definitions/TransactionDetailsJSON"
        },
        "metadata": {
          "$ref": "#/definitions/TransactionMetadataJSON"
        },
        "other_account": {
          "$ref": "#/definitions/OtherAccountJSON"
        }
      }
    },
    "TransactionsJSON": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionJSON"
          }
        }
      }
    },
    "SuccessMessage": {
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "OtherAccountsJSON": {
      "required": [
        "other_accounts"
      ],
      "properties": {
        "other_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherAccountJSON"
          }
        }
      }
    },
    "TransactionNarrativeJSON": {
      "required": [
        "narrative"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "narative"
        }
      }
    },
    "TransactionCommentsJSON": {
      "required": [
        "comments"
      ],
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "TransactionWhereJSON": {
      "required": [
        "where"
      ],
      "properties": {
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        }
      }
    },
    "PermissionJSON": {
      "required": [
        "user",
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "PermissionsJSON": {
      "required": [
        "permissions"
      ],
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionJSON"
          }
        }
      }
    },
    "UpdateAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "label": {
          "type": "string",
          "example": "label"
        },
        "id": {
          "type": "string",
          "example": "123123"
        }
      }
    },
    "ViewIdsJson": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocationPlainJSON": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.535"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.532"
        }
      }
    },
    "PostTransactionWhereJSON": {
      "required": [
        "where"
      ],
      "properties": {
        "where": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "CorporateLocationJSON": {
      "required": [
        "corporate_location"
      ],
      "properties": {
        "corporate_location": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "PhysicalLocationJSON": {
      "required": [
        "physical_location"
      ],
      "properties": {
        "physical_location": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "PinResetJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "reason_requested": {
          "type": "string",
          "example": "forgot"
        },
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "ReplacementJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "reason_requested": {
          "type": "string",
          "example": "Good Point"
        },
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "PhysicalCardJSON": {
      "required": [
        "bank_id",
        "bank_card_number",
        "name_on_card",
        "issue_number",
        "serial_number",
        "valid_from_date",
        "expires_date",
        "enabled",
        "cancelled",
        "on_hot_list",
        "technology",
        "networks",
        "allows",
        "account",
        "replacement",
        "pin_reset",
        "collected",
        "posted"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issue_number": {
          "type": "string",
          "example": "String"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "technology": {
          "type": "string",
          "example": "String"
        },
        "cancelled": {
          "type": "boolean",
          "example": "true"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "String"
        },
        "account": {
          "$ref": "#/definitions/AccountJSON"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "bank_card_number": {
          "type": "string",
          "example": "String"
        },
        "name_on_card": {
          "type": "string",
          "example": "String"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "on_hot_list": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "PhysicalCardsJSON": {
      "required": [
        "cards"
      ],
      "properties": {
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicalCardJSON"
          }
        }
      }
    },
    "PostPhysicalCardJSON": {
      "required": [
        "bank_card_number",
        "name_on_card",
        "issue_number",
        "serial_number",
        "valid_from_date",
        "expires_date",
        "enabled",
        "cancelled",
        "on_hot_list",
        "technology",
        "networks",
        "allows",
        "account_id",
        "replacement",
        "pin_reset",
        "collected",
        "posted"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issue_number": {
          "type": "string",
          "example": "String"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "technology": {
          "type": "string",
          "example": "String"
        },
        "cancelled": {
          "type": "boolean",
          "example": "true"
        },
        "account_id": {
          "type": "string",
          "example": "String"
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "String"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "bank_card_number": {
          "type": "string",
          "example": "String"
        },
        "name_on_card": {
          "type": "string",
          "example": "String"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "on_hot_list": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CustomerFaceImageJson": {
      "required": [
        "url",
        "date"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "url": {
          "type": "string",
          "example": "www.openbankproject"
        }
      }
    },
    "LocationJsonV140": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        }
      }
    },
    "TransactionRequestChargeJsonV140": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "summary": {
          "type": "string",
          "example": "Good"
        }
      }
    },
    "TransactionRequestTypeJsonV140": {
      "required": [
        "value",
        "charge"
      ],
      "properties": {
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV140"
        },
        "value": {
          "type": "string",
          "example": "10"
        }
      }
    },
    "TransactionRequestTypesJsonV140": {
      "required": [
        "transaction_request_types"
      ],
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTypeJsonV140"
          }
        }
      }
    },
    "TransactionRequestAccountJsonV140": {
      "required": [
        "bank_id",
        "account_id"
      ],
      "properties": {
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        }
      }
    },
    "ChallengeJsonV140": {
      "required": [
        "id",
        "allowed_attempts",
        "challenge_type"
      ],
      "properties": {
        "challenge_type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "allowed_attempts": {
          "type": "integer",
          "format": "int32",
          "example": "3"
        },
        "id": {
          "type": "string",
          "example": "be1a183d-b301-4b83-b855-5eeffdd3526f"
        }
      }
    },
    "DriveUpStringJson": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "LicenseJsonV140": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "TESOBE"
        },
        "id": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "MetaJsonV140": {
      "required": [
        "license"
      ],
      "properties": {
        "license": {
          "$ref": "#/definitions/LicenseJsonV140"
        }
      }
    },
    "LobbyStringJson": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "AddressJsonV140": {
      "required": [
        "line_1",
        "line_2",
        "line_3",
        "city",
        "state",
        "postcode",
        "country"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "Wedding"
        },
        "state": {
          "type": "string",
          "example": "Berlin Brandenburg"
        },
        "postcode": {
          "type": "string",
          "example": "13359"
        },
        "country": {
          "type": "string",
          "example": "DE"
        },
        "line_3": {
          "type": "string",
          "example": ""
        },
        "line_1": {
          "type": "string",
          "example": "Osloer Straße 16/17"
        }
      }
    },
    "PostCustomerJson": {
      "required": [
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "String"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "String"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "String"
        },
        "legal_name": {
          "type": "string",
          "example": "String"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "1"
        },
        "relationship_status": {
          "type": "string",
          "example": "String"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CustomerJsonV140": {
      "required": [
        "customer_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "String"
        },
        "email": {
          "type": "string",
          "example": "String"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "String"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "String"
        },
        "legal_name": {
          "type": "string",
          "example": "String"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "String"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CustomersJsonV140": {
      "required": [
        "customers"
      ],
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerJsonV140"
          }
        }
      }
    },
    "CustomerMessageJson": {
      "required": [
        "id",
        "date",
        "message",
        "from_department",
        "from_person"
      ],
      "properties": {
        "from_person": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "from_department": {
          "type": "string",
          "example": "String"
        },
        "message": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CustomerMessagesJson": {
      "required": [
        "messages"
      ],
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerMessageJson"
          }
        }
      }
    },
    "AddCustomerMessageJson": {
      "required": [
        "message",
        "from_department",
        "from_person"
      ],
      "properties": {
        "from_person": {
          "type": "string",
          "example": "String"
        },
        "from_department": {
          "type": "string",
          "example": "String"
        },
        "message": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "BranchRoutingJsonV141": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "String"
        },
        "scheme": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "BranchJson": {
      "required": [
        "id",
        "name",
        "address",
        "location",
        "lobby",
        "drive_up",
        "meta",
        "branch_routing"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "branch_routing": {
          "$ref": "#/definitions/BranchRoutingJsonV141"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpStringJson"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyStringJson"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "BranchesJson": {
      "required": [
        "branches"
      ],
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchJson"
          }
        }
      }
    },
    "Meta": {
      "required": [
        "license"
      ],
      "properties": {
        "license": {
          "$ref": "#/definitions/License"
        }
      }
    },
    "OpeningTimesV300": {
      "required": [
        "opening_time",
        "closing_time"
      ],
      "properties": {
        "closing_time": {
          "type": "string",
          "example": "18:00"
        },
        "opening_time": {
          "type": "string",
          "example": "10:00"
        }
      }
    },
    "OpeningTimes": {
      "required": [
        "openingTime",
        "closingTime"
      ],
      "properties": {
        "closingTime": {
          "type": "string",
          "example": "18:00"
        },
        "openingTime": {
          "type": "string",
          "example": "10:00"
        }
      }
    },
    "Address": {
      "required": [
        "line1",
        "line2",
        "line3",
        "city",
        "state",
        "postCode",
        "countryCode"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "postCode": {
          "type": "string",
          "example": "13359"
        },
        "state": {
          "type": "string",
          "example": "Brandenburg"
        },
        "line1": {
          "type": "string",
          "example": "No 1 the Road"
        },
        "county": {
          "type": "string",
          "example": "String"
        },
        "countryCode": {
          "type": "string",
          "example": "DE"
        },
        "line2": {
          "type": "string",
          "example": "The Place"
        },
        "line3": {
          "type": "string",
          "example": "The Hill"
        }
      }
    },
    "Lobby": {
      "required": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimes"
        }
      }
    },
    "DriveUp": {
      "required": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimes"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimes"
        }
      }
    },
    "BasicResourceUser": {
      "required": [
        "userId",
        "provider",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": " String"
        },
        "provider": {
          "type": "string",
          "example": " String"
        },
        "userId": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "Location": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/BasicResourceUser"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "10.0"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "10.0"
        }
      }
    },
    "LobbyString": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "String "
        }
      }
    },
    "DriveUpString": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "String "
        }
      }
    },
    "Branch": {
      "required": [
        "branchId",
        "bankId",
        "name",
        "address",
        "location",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Branch by the Lake"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "phoneNumber": {
          "type": "string",
          "example": "+381631954907"
        },
        "driveUp": {
          "$ref": "#/definitions/DriveUp"
        },
        "isAccessible": {
          "type": "boolean",
          "example": "true"
        },
        "branchId": {
          "$ref": "#/definitions/BranchId"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "moreInfo": {
          "type": "string",
          "example": "short walk to the lake from here"
        },
        "lobbyString": {
          "$ref": "#/definitions/LobbyString"
        },
        "lobby": {
          "$ref": "#/definitions/Lobby"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "bankId": {
          "$ref": "#/definitions/BankId"
        },
        "branchType": {
          "type": "string",
          "example": "Full service store"
        },
        "branchRouting": {
          "$ref": "#/definitions/Routing"
        },
        "driveUpString": {
          "$ref": "#/definitions/DriveUpString"
        }
      }
    },
    "LobbyJsonV330": {
      "required": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimesV300"
        }
      }
    },
    "DriveUpJsonV330": {
      "required": [
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimesV300"
        }
      }
    },
    "BranchJsonV300": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "lobby",
        "drive_up",
        "branch_routing",
        "is_accessible",
        "branch_type",
        "more_info",
        "phone_number"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Branch by the Lake"
        },
        "phone_number": {
          "type": "string",
          "example": "+381631954907"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "branch_type": {
          "type": "string",
          "example": "Full service store"
        },
        "branch_routing": {
          "$ref": "#/definitions/BranchRoutingJsonV141"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpJsonV330"
        },
        "more_info": {
          "type": "string",
          "example": "short walk to the lake from here"
        },
        "bank_id": {
          "type": "string",
          "example": "bank-id-123"
        },
        "id": {
          "type": "string",
          "example": "branch-id-123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyJsonV330"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV300"
        },
        "is_accessible": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "BranchesJsonV300": {
      "required": [
        "branches"
      ],
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchJsonV300"
          }
        }
      }
    },
    "AtmJson": {
      "required": [
        "id",
        "name",
        "address",
        "location",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "AtmsJson": {
      "required": [
        "atms"
      ],
      "properties": {
        "atms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AtmJson"
          }
        }
      }
    },
    "AddressJsonV300": {
      "required": [
        "line_1",
        "line_2",
        "line_3",
        "city",
        "county",
        "state",
        "postcode",
        "country_code"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "The Place"
        },
        "state": {
          "type": "string",
          "example": "Brandenburg"
        },
        "postcode": {
          "type": "string",
          "example": "13359"
        },
        "county": {
          "type": "string",
          "example": ""
        },
        "country_code": {
          "type": "string",
          "example": "DE"
        },
        "line_3": {
          "type": "string",
          "example": "The Hill"
        },
        "line_1": {
          "type": "string",
          "example": "No 1 the Road"
        }
      }
    },
    "AtmJsonV300": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "sunday",
        "is_accessible",
        "located_at",
        "more_info",
        "has_deposit_capability"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "name": {
          "type": "string",
          "example": "Atm by the Lake"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "has_deposit_capability": {
          "type": "string",
          "example": "true"
        },
        "more_info": {
          "type": "string",
          "example": "short walk to the lake from here"
        },
        "bank_id": {
          "type": "string",
          "example": "bank-id-123"
        },
        "id": {
          "type": "string",
          "example": "atm-id-123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV300"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "is_accessible": {
          "type": "string",
          "example": "true"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "located_at": {
          "type": "string",
          "example": "Full service store"
        }
      }
    },
    "ProductJson": {
      "required": [
        "code",
        "name",
        "category",
        "family",
        "super_family",
        "more_info_url",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "more_info_url": {
          "type": "string",
          "example": "String"
        },
        "super_family": {
          "type": "string",
          "example": "String"
        },
        "code": {
          "type": "string",
          "example": "String"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "category": {
          "type": "string",
          "example": "String"
        },
        "family": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ProductsJson": {
      "required": [
        "products"
      ],
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductJson"
          }
        }
      }
    },
    "CrmEventJson": {
      "required": [
        "id",
        "bank_id",
        "customer_name",
        "customer_number",
        "category",
        "detail",
        "channel",
        "scheduled_date",
        "actual_date",
        "result"
      ],
      "properties": {
        "channel": {
          "type": "string",
          "example": "String"
        },
        "customer_name": {
          "type": "string",
          "example": "String"
        },
        "result": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "scheduled_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "category": {
          "type": "string",
          "example": "String"
        },
        "detail": {
          "type": "string",
          "example": "String"
        },
        "actual_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "CrmEventsJson": {
      "required": [
        "crm_events"
      ],
      "properties": {
        "crm_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrmEventJson"
          }
        }
      }
    },
    "ImplementedByJson": {
      "required": [
        "version",
        "function"
      ],
      "properties": {
        "function": {
          "type": "string",
          "example": "getBranches"
        },
        "version": {
          "type": "string",
          "example": "1_4_0"
        }
      }
    },
    "ResourceDocJson": {
      "required": [
        "operation_id",
        "request_verb",
        "request_url",
        "summary",
        "description",
        "example_request_body",
        "success_response_body",
        "error_response_bodies",
        "implemented_by",
        "is_core",
        "is_psd2",
        "is_obwg",
        "tags"
      ],
      "properties": {
        "error_response_bodies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "request_verb": {
          "type": "string",
          "example": "String"
        },
        "request_url": {
          "type": "string",
          "example": "String"
        },
        "description": {
          "type": "string",
          "example": "String"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "is_core": {
          "type": "boolean",
          "example": "true"
        },
        "success_response_body": {
          "$ref": "#/definitions/SuccessMessage"
        },
        "example_request_body": {
          "$ref": "#/definitions/SuccessMessage"
        },
        "is_psd2": {
          "type": "boolean",
          "example": "true"
        },
        "operation_id": {
          "type": "string",
          "example": "String"
        },
        "implemented_by": {
          "$ref": "#/definitions/ImplementedByJson"
        },
        "is_obwg": {
          "type": "boolean",
          "example": "true"
        },
        "summary": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ResourceDocsJson": {
      "required": [
        "resource_docs"
      ],
      "properties": {
        "resource_docs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDocJson"
          }
        }
      }
    },
    "TransactionRequestBodyJsonV140": {
      "required": [
        "to",
        "value",
        "description",
        "challenge_type"
      ],
      "properties": {
        "challenge_type": {
          "type": "string",
          "example": "String"
        },
        "description": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        }
      }
    },
    "TransactionRequestJsonV140": {
      "required": [
        "id",
        "type",
        "from",
        "body",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/TransactionRequestBodyJsonV140"
        },
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "status": {
          "type": "string",
          "example": "String"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "transaction_ids": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "BasicViewJson": {
      "required": [
        "id",
        "short_name",
        "is_public"
      ],
      "properties": {
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "HHH"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      }
    },
    "BasicAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id",
        "views_available"
      ],
      "properties": {
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicViewJson"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        }
      }
    },
    "CoreAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "string",
          "example": ""
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        }
      }
    },
    "ModeratedCoreAccountJSON": {
      "required": [
        "id",
        "label",
        "number",
        "owners",
        "type",
        "balance",
        "IBAN",
        "swift_bic",
        "bank_id",
        "account_routing"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "IBAN": {
          "type": "string",
          "example": "GR1301720530005053000582373"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "swift_bic": {
          "type": "string",
          "example": "UKTF3049auf"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "type": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "BasicAccountsJSON": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicAccountJSON"
          }
        }
      }
    },
    "CoreAccountsJSON": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreAccountJSON"
          }
        }
      }
    },
    "KycDocumentJSON": {
      "required": [
        "bank_id",
        "customer_id",
        "id",
        "customer_number",
        "type",
        "number",
        "issue_date",
        "issue_place",
        "expiry_date"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "bank_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "issue_place": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "expiry_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "KycDocumentsJSON": {
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycDocumentJSON"
          }
        }
      }
    },
    "KycMediaJSON": {
      "required": [
        "bank_id",
        "customer_id",
        "id",
        "customer_number",
        "type",
        "url",
        "date",
        "relates_to_kyc_document_id",
        "relates_to_kyc_check_id"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "url": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "bank_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "relates_to_kyc_document_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "relates_to_kyc_check_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "KycMediasJSON": {
      "required": [
        "medias"
      ],
      "properties": {
        "medias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycMediaJSON"
          }
        }
      }
    },
    "KycCheckJSON": {
      "required": [
        "bank_id",
        "customer_id",
        "id",
        "customer_number",
        "date",
        "how",
        "staff_user_id",
        "staff_name",
        "satisfied",
        "comments"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "bank_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "how": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "satisfied": {
          "type": "boolean",
          "example": "true"
        },
        "staff_user_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "staff_name": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "comments": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "KycChecksJSON": {
      "required": [
        "checks"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycCheckJSON"
          }
        }
      }
    },
    "KycStatusJSON": {
      "required": [
        "customer_id",
        "customer_number",
        "ok",
        "date"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "ok": {
          "type": "boolean",
          "example": "true"
        },
        "customer_number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_id": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "KycStatusesJSON": {
      "required": [
        "statuses"
      ],
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycStatusJSON"
          }
        }
      }
    },
    "SocialMediaJSON": {
      "required": [
        "customer_number",
        "type",
        "handle",
        "date_added",
        "date_activated"
      ],
      "properties": {
        "date_activated": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "customer_number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "date_added": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "handle": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "SocialMediasJSON": {
      "required": [
        "checks"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SocialMediaJSON"
          }
        }
      }
    },
    "EntitlementJSON": {
      "required": [
        "entitlement_id",
        "role_name",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "role_name": {
          "type": "string",
          "example": "CanQueryOtherUser"
        },
        "entitlement_id": {
          "type": "string",
          "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
        }
      }
    },
    "EntitlementJSONs": {
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementJSON"
          }
        }
      }
    },
    "UserJsonV200": {
      "required": [
        "user_id",
        "email",
        "provider_id",
        "provider",
        "username",
        "entitlements"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "email": {
          "type": "string",
          "example": "robert.x.0.gh@example.com"
        },
        "username": {
          "type": "string",
          "example": "robert.x.0.gh"
        },
        "provider_id": {
          "type": "string",
          "example": "OBP"
        },
        "user_id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "entitlements": {
          "$ref": "#/definitions/EntitlementJSONs"
        }
      }
    },
    "CoreTransactionDetailsJSON": {
      "required": [
        "type",
        "description",
        "posted",
        "completed",
        "new_balance",
        "value"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "OBP"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "CoreAccountHolderJSON": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "ZACK"
        }
      }
    },
    "CreateEntitlementJSON": {
      "required": [
        "bank_id",
        "role_name"
      ],
      "properties": {
        "role_name": {
          "type": "string",
          "example": "String"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CoreCounterpartyJSON": {
      "required": [
        "id",
        "holder",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "1234"
        },
        "IBAN": {
          "type": "string",
          "example": "UK12344DB"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK12344DB"
        },
        "holder": {
          "$ref": "#/definitions/CoreAccountHolderJSON"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "kind": {
          "type": "string",
          "example": "AV"
        }
      }
    },
    "CoreTransactionJSON": {
      "required": [
        "id",
        "account",
        "counterparty",
        "details"
      ],
      "properties": {
        "details": {
          "$ref": "#/definitions/CoreTransactionDetailsJSON"
        },
        "counterparty": {
          "$ref": "#/definitions/CoreCounterpartyJSON"
        },
        "account": {
          "$ref": "#/definitions/ThisAccountJSON"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "CoreTransactionsJSON": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreTransactionJSON"
          }
        }
      }
    },
    "TransactionRequestChargeJsonV200": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "summary": {
          "type": "string",
          "example": "Good"
        }
      }
    },
    "TransactionRequestWithChargeJson": {
      "required": [
        "id",
        "type",
        "from",
        "details",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge",
        "charge"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "id": {
          "type": "string",
          "example": "82f92531-9c63-4246-abfc-96c20ec46188"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "status": {
          "type": "string",
          "example": "COMPLETED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "details": {
          "type": "string",
          "example": ""
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "transaction_ids": {
          "type": "string",
          "example": "666666-9c63-4246-abfc-96c20ec46188"
        }
      }
    },
    "TransactionRequestBodyJsonV200": {
      "required": [
        "to",
        "value",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "Good"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        }
      }
    },
    "TransactionTypeJsonV200": {
      "required": [
        "id",
        "bank_id",
        "short_code",
        "summary",
        "description",
        "charge"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "short_code": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "bank_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "id": {
          "$ref": "#/definitions/TransactionTypeId"
        },
        "charge": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "summary": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "TransactionTypesJsonV200": {
      "required": [
        "transaction_types"
      ],
      "properties": {
        "transaction_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTypeJsonV200"
          }
        }
      }
    },
    "LinkJson": {
      "required": [
        "href",
        "rel",
        "method"
      ],
      "properties": {
        "method": {
          "type": "string",
          "example": "String"
        },
        "rel": {
          "type": "string",
          "example": "String"
        },
        "href": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "LinksJson": {
      "required": [
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkJson"
          }
        }
      }
    },
    "ResultAndLinksJson": {
      "required": [
        "result",
        "links"
      ],
      "properties": {
        "links": {
          "$ref": "#/definitions/LinksJson"
        },
        "result": {
          "type": "string",
          "example": ""
        }
      }
    },
    "CreateUserJson": {
      "required": [
        "email",
        "username",
        "password",
        "first_name",
        "last_name"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "String"
        },
        "email": {
          "type": "string",
          "example": "String"
        },
        "username": {
          "type": "string",
          "example": "String"
        },
        "last_name": {
          "type": "string",
          "example": "String"
        },
        "password": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CreateUsersJson": {
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateUserJson"
          }
        }
      }
    },
    "CreateMeetingJson": {
      "required": [
        "provider_id",
        "purpose_id"
      ],
      "properties": {
        "purpose_id": {
          "type": "string",
          "example": "String"
        },
        "provider_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MeetingKeysJson": {
      "required": [
        "session_id",
        "staff_token",
        "customer_token"
      ],
      "properties": {
        "customer_token": {
          "type": "string",
          "example": "String"
        },
        "staff_token": {
          "type": "string",
          "example": "String"
        },
        "session_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MeetingPresentJson": {
      "required": [
        "staff_user_id",
        "customer_user_id"
      ],
      "properties": {
        "customer_user_id": {
          "type": "string",
          "example": "String"
        },
        "staff_user_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MeetingJson": {
      "required": [
        "meeting_id",
        "provider_id",
        "purpose_id",
        "bank_id",
        "present",
        "keys",
        "when"
      ],
      "properties": {
        "present": {
          "$ref": "#/definitions/MeetingPresentJson"
        },
        "provider_id": {
          "type": "string",
          "example": "String"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "purpose_id": {
          "type": "string",
          "example": "String"
        },
        "when": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "meeting_id": {
          "type": "string",
          "example": "String"
        },
        "keys": {
          "$ref": "#/definitions/MeetingKeysJson"
        }
      }
    },
    "MeetingsJson": {
      "required": [
        "meetings"
      ],
      "properties": {
        "meetings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeetingJson"
          }
        }
      }
    },
    "UserCustomerLinkJson": {
      "required": [
        "user_customer_link_id",
        "customer_id",
        "user_id",
        "date_inserted",
        "is_active"
      ],
      "properties": {
        "is_active": {
          "type": "boolean",
          "example": "true"
        },
        "customer_id": {
          "type": "string",
          "example": "String"
        },
        "user_id": {
          "type": "string",
          "example": "String"
        },
        "date_inserted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "user_customer_link_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "UserCustomerLinksJson": {
      "required": [
        "l"
      ],
      "properties": {
        "l": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCustomerLinkJson"
          }
        }
      }
    },
    "CreateUserCustomerLinkJson": {
      "required": [
        "user_id",
        "customer_id"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "String"
        },
        "user_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CreateAccountJSON": {
      "required": [
        "user_id",
        "label",
        "type",
        "balance"
      ],
      "properties": {
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "label": {
          "type": "string",
          "example": "String"
        },
        "user_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostKycDocumentJSON": {
      "required": [
        "customer_number",
        "type",
        "number",
        "issue_date",
        "issue_place",
        "expiry_date"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "issue_place": {
          "type": "string",
          "example": "String"
        },
        "expiry_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "PostKycMediaJSON": {
      "required": [
        "customer_number",
        "type",
        "url",
        "date",
        "relates_to_kyc_document_id",
        "relates_to_kyc_check_id"
      ],
      "properties": {
        "url": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "relates_to_kyc_document_id": {
          "type": "string",
          "example": "String"
        },
        "relates_to_kyc_check_id": {
          "type": "string",
          "example": "String"
        },
        "type": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostKycCheckJSON": {
      "required": [
        "customer_number",
        "date",
        "how",
        "staff_user_id",
        "staff_name",
        "satisfied",
        "comments"
      ],
      "properties": {
        "customer_number": {
          "type": "string",
          "example": "1239879"
        },
        "how": {
          "type": "string",
          "example": "online_meeting"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "satisfied": {
          "type": "boolean",
          "example": "true"
        },
        "staff_user_id": {
          "type": "string",
          "example": "67876"
        },
        "staff_name": {
          "type": "string",
          "example": "Simon"
        },
        "comments": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostKycStatusJSON": {
      "required": [
        "customer_number",
        "ok",
        "date"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "ok": {
          "type": "boolean",
          "example": "true"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CreateCustomerJson": {
      "required": [
        "user_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "String"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "String"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "String"
        },
        "user_id": {
          "type": "string",
          "example": "String"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "String"
        },
        "legal_name": {
          "type": "string",
          "example": "String"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "1"
        },
        "relationship_status": {
          "type": "string",
          "example": "String"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "TransactionRequestJsonV200": {
      "required": [
        "id",
        "type",
        "from",
        "body",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge"
      ],
      "properties": {
        "body": {
          "$ref": "#/definitions/TransactionRequestBodyJsonV200"
        },
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "status": {
          "type": "string",
          "example": "String"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "transaction_ids": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestWithChargesJson": {
      "required": [
        "transaction_requests_with_charges"
      ],
      "properties": {
        "transaction_requests_with_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestWithChargeJson"
          }
        }
      }
    },
    "UsersJSONV200": {
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJsonV200"
          }
        }
      }
    },
    "CounterpartiesJSON": {
      "required": [
        "counterparties"
      ],
      "properties": {
        "counterparties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreCounterpartyJSON"
          }
        }
      }
    },
    "CounterpartyIdJson": {
      "required": [
        "counterparty_id"
      ],
      "properties": {
        "counterparty_id": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "IbanJson": {
      "required": [
        "iban"
      ],
      "properties": {
        "iban": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "MetricJson": {
      "required": [
        "user_id",
        "url",
        "date",
        "user_name",
        "app_name",
        "developer_email",
        "implemented_by_partial_function",
        "implemented_in_version",
        "consumer_id",
        "verb"
      ],
      "properties": {
        "implemented_in_version": {
          "type": "string",
          "example": "v210"
        },
        "url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "implemented_by_partial_function": {
          "type": "string",
          "example": "getBanks"
        },
        "user_id": {
          "type": "string",
          "example": "134"
        },
        "developer_email": {
          "type": "string",
          "example": "contact@tesobe.ocm"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "consumer_id": {
          "type": "string",
          "example": "123"
        },
        "verb": {
          "type": "string",
          "example": "get"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "user_name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "ResourceUserJSON": {
      "required": [
        "user_id",
        "email",
        "provider_id",
        "provider",
        "username"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "obp"
        },
        "email": {
          "type": "string",
          "example": "contact@tesobe.com"
        },
        "username": {
          "type": "string",
          "example": "TESOBE"
        },
        "provider_id": {
          "type": "string",
          "example": "obp"
        },
        "user_id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "AvailableRoleJSON": {
      "required": [
        "role",
        "requires_bank_id"
      ],
      "properties": {
        "requires_bank_id": {
          "type": "boolean",
          "example": "true"
        },
        "role": {
          "type": "string",
          "example": "CanCreateBranch"
        }
      }
    },
    "TransactionRequestTypeJSONV210": {
      "required": [
        "transaction_request_type"
      ],
      "properties": {
        "transaction_request_type": {
          "type": "string",
          "example": "SandboxTan"
        }
      }
    },
    "TransactionRequestTypesJSON": {
      "required": [
        "transaction_request_types"
      ],
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTypeJSONV210"
          }
        }
      }
    },
    "TransactionRequestBodyCounterpartyJSON": {
      "required": [
        "to",
        "value",
        "description",
        "charge_policy"
      ],
      "properties": {
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "description": {
          "type": "string",
          "example": "A description for the transaction to the counterparty"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "to": {
          "$ref": "#/definitions/CounterpartyIdJson"
        }
      }
    },
    "TransactionRequestBodySEPAJSON": {
      "required": [
        "value",
        "to",
        "description",
        "charge_policy"
      ],
      "properties": {
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "description": {
          "type": "string",
          "example": "This is a SEPA Transaction Request"
        },
        "to": {
          "$ref": "#/definitions/IbanJson"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "CustomerCreditRatingJSON": {
      "required": [
        "rating",
        "source"
      ],
      "properties": {
        "source": {
          "type": "string",
          "example": "OBP"
        },
        "rating": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "CustomerJsonV210": {
      "required": [
        "bank_id",
        "customer_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "123"
        },
        "email": {
          "type": "string",
          "example": "contact@tesobe.com"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "123"
        },
        "customer_number": {
          "type": "string",
          "example": "123"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "123"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "bankid1234"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "credit_rating": {
          "$ref": "#/definitions/CustomerCreditRatingJSON"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "123"
        },
        "legal_name": {
          "type": "string",
          "example": "legal_name"
        },
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "123"
        },
        "relationship_status": {
          "type": "string",
          "example": "123"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "UserJSONV210": {
      "required": [
        "id",
        "provider",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "OBP"
        },
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "LocationJsonV210": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV210"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        }
      }
    },
    "PostCustomerJsonV210": {
      "required": [
        "user_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "credit_rating",
        "credit_limit",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "person@example.com"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "customer_number": {
          "type": "string",
          "example": "new customer number 687687678"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Bachelor’s Degree"
        },
        "user_id": {
          "type": "string",
          "example": "user_id to attach this customer to e.g. 123213"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "credit_rating": {
          "$ref": "#/definitions/CustomerCreditRatingJSON"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "Employed"
        },
        "legal_name": {
          "type": "string",
          "example": "NONE"
        },
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        },
        "relationship_status": {
          "type": "string",
          "example": "Single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "TransactionRequestWithChargeJSON210": {
      "required": [
        "id",
        "type",
        "from",
        "details",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge",
        "charge"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "id": {
          "type": "string",
          "example": "4050046c-63b3-4868-8a22-14b4181d33a6"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "status": {
          "type": "string",
          "example": "COMPLETED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "details": {
          "type": "string",
          "example": ""
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "transaction_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransactionRequestWithChargeJSONs210": {
      "required": [
        "transaction_requests_with_charges"
      ],
      "properties": {
        "transaction_requests_with_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
          }
        }
      }
    },
    "AvailableRolesJSON": {
      "required": [
        "roles"
      ],
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableRoleJSON"
          }
        }
      }
    },
    "ConsumerJSON": {
      "required": [
        "consumer_id",
        "app_name",
        "app_type",
        "description",
        "developer_email",
        "redirect_url",
        "created_by_user_id",
        "created_by_user",
        "enabled",
        "created"
      ],
      "properties": {
        "created_by_user_id": {
          "type": "string",
          "example": "123213"
        },
        "app_type": {
          "type": "string",
          "example": "Web"
        },
        "description": {
          "type": "string",
          "example": "Account Management"
        },
        "created_by_user": {
          "$ref": "#/definitions/ResourceUserJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "redirect_url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "developer_email": {
          "type": "string",
          "example": "contact@tesobe.com"
        },
        "consumer_id": {
          "type": "integer",
          "format": "int64",
          "example": "1213"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "created": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        }
      }
    },
    "ConsumersJson": {
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerJSON"
          }
        }
      }
    },
    "PutEnabledJSON": {
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": "false"
        }
      }
    },
    "ProductJsonV210": {
      "required": [
        "bank_id",
        "code",
        "name",
        "category",
        "family",
        "super_family",
        "more_info_url",
        "details",
        "description",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product name"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/prod1/more-info.html"
        },
        "super_family": {
          "type": "string",
          "example": "super family"
        },
        "code": {
          "type": "string",
          "example": "prod1"
        },
        "bank_id": {
          "type": "string",
          "example": "bankid123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "details": {
          "type": "string",
          "example": "Details"
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "family": {
          "type": "string",
          "example": "family"
        }
      }
    },
    "ProductsJsonV210": {
      "required": [
        "products"
      ],
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductJsonV210"
          }
        }
      }
    },
    "PostCounterpartyJSON": {
      "required": [
        "name",
        "other_account_routing_scheme",
        "other_account_routing_address",
        "other_bank_routing_scheme",
        "other_bank_routing_address",
        "other_branch_routing_scheme",
        "other_branch_routing_address",
        "is_beneficiary"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "7987987-2348987-234234"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "IBAN"
        },
        "name": {
          "type": "string",
          "example": "GOOD"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "Berlin"
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "BIC"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "OBP"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "MetricsJson": {
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricJson"
          }
        }
      }
    },
    "BranchJsonPutV210": {
      "required": [
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "lobby",
        "drive_up"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpStringJson"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.fi"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyStringJson"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "BranchJsonPostV210": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "lobby",
        "drive_up"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpStringJson"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.fi"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyStringJson"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "ConsumerRedirectUrlJSON": {
      "required": [
        "redirect_url"
      ],
      "properties": {
        "redirect_url": {
          "type": "string",
          "example": "http://localhost:8888"
        }
      }
    },
    "ViewJSONV220": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public",
        "alias",
        "hide_metadata_if_alias_used",
        "can_add_comment",
        "can_add_corporate_location",
        "can_add_image",
        "can_add_image_url",
        "can_add_more_info",
        "can_add_open_corporates_url",
        "can_add_physical_location",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_add_tag",
        "can_add_url",
        "can_add_where_tag",
        "can_delete_comment",
        "can_add_counterparty",
        "can_delete_corporate_location",
        "can_delete_image",
        "can_delete_physical_location",
        "can_delete_tag",
        "can_delete_where_tag",
        "can_edit_owner_comment",
        "can_see_bank_account_balance",
        "can_see_bank_account_bank_name",
        "can_see_bank_account_currency",
        "can_see_bank_account_iban",
        "can_see_bank_account_label",
        "can_see_bank_account_national_identifier",
        "can_see_bank_account_number",
        "can_see_bank_account_owners",
        "can_see_bank_account_swift_bic",
        "can_see_bank_account_type",
        "can_see_comments",
        "can_see_corporate_location",
        "can_see_image_url",
        "can_see_images",
        "can_see_more_info",
        "can_see_open_corporates_url",
        "can_see_other_account_bank_name",
        "can_see_other_account_iban",
        "can_see_other_account_kind",
        "can_see_other_account_metadata",
        "can_see_other_account_national_identifier",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_see_owner_comment",
        "can_see_physical_location",
        "can_see_private_alias",
        "can_see_public_alias",
        "can_see_tags",
        "can_see_transaction_amount",
        "can_see_transaction_balance",
        "can_see_transaction_currency",
        "can_see_transaction_description",
        "can_see_transaction_finish_date",
        "can_see_transaction_metadata",
        "can_see_transaction_other_bank_account",
        "can_see_transaction_start_date",
        "can_see_transaction_this_bank_account",
        "can_see_transaction_type",
        "can_see_url",
        "can_see_where_tag"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "No"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_counterparty": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ViewsJSONV220": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV220"
          }
        }
      }
    },
    "FXRateJsonV220": {
      "required": [
        "bank_id",
        "from_currency_code",
        "to_currency_code",
        "conversion_value",
        "inverse_conversion_value",
        "effective_date"
      ],
      "properties": {
        "inverse_conversion_value": {
          "type": "number",
          "format": "double",
          "example": "1.0"
        },
        "to_currency_code": {
          "type": "string",
          "example": "USD"
        },
        "effective_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "conversion_value": {
          "type": "number",
          "format": "double",
          "example": "1.0"
        },
        "bank_id": {
          "type": "string",
          "example": "bankid123"
        },
        "from_currency_code": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "CounterpartyJsonV220": {
      "required": [
        "name",
        "created_by_user_id",
        "this_bank_id",
        "this_account_id",
        "this_view_id",
        "counterparty_id",
        "other_bank_routing_scheme",
        "other_bank_routing_address",
        "other_branch_routing_scheme",
        "other_branch_routing_address",
        "other_account_routing_scheme",
        "other_account_routing_address",
        "is_beneficiary"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "DE89 3704 0044 0532 0130 00"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "IBAN"
        },
        "created_by_user_id": {
          "type": "string",
          "example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
        },
        "name": {
          "type": "string",
          "example": "b2dd6c2c-7ebd-4014-9c73-b7d28cc71fe1"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "Berlin"
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "test"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "OBP"
        },
        "this_account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "this_view_id": {
          "type": "string",
          "example": "owner"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "test"
        },
        "this_bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "counterparty_id": {
          "type": "string",
          "example": "1d65db7c-a7b2-4839-af41-958276ab7790"
        }
      }
    },
    "CounterpartiesJsonV220": {
      "required": [
        "counterparties"
      ],
      "properties": {
        "counterparties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterpartyJsonV220"
          }
        }
      }
    },
    "BankJSONV220": {
      "required": [
        "id",
        "full_name",
        "short_name",
        "logo_url",
        "website_url",
        "swift_bic",
        "national_identifier",
        "bank_routing"
      ],
      "properties": {
        "national_identifier": {
          "type": "string",
          "example": "UK97ZZZ1234567890"
        },
        "full_name": {
          "type": "string",
          "example": "uk"
        },
        "swift_bic": {
          "type": "string",
          "example": "IIIGGB22"
        },
        "logo_url": {
          "type": "string",
          "example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk.x"
        },
        "short_name": {
          "type": "string",
          "example": "uk"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        },
        "website_url": {
          "type": "string",
          "example": "https://www.example.com"
        }
      }
    },
    "BranchJsonV220": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "lobby",
        "drive_up",
        "branch_routing"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "branch_routing": {
          "$ref": "#/definitions/BranchRoutingJsonV141"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpStringJson"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyStringJson"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "AtmJsonV220": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV140"
        }
      }
    },
    "ProductJsonV220": {
      "required": [
        "bank_id",
        "code",
        "name",
        "category",
        "family",
        "super_family",
        "more_info_url",
        "details",
        "description",
        "meta"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product name"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/prod1/more-info.html"
        },
        "super_family": {
          "type": "string",
          "example": "super family"
        },
        "code": {
          "type": "string",
          "example": "prod1"
        },
        "bank_id": {
          "type": "string",
          "example": "bankid123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "details": {
          "type": "string",
          "example": "Details"
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "family": {
          "type": "string",
          "example": "family"
        }
      }
    },
    "CreateAccountJSONV220": {
      "required": [
        "user_id",
        "label",
        "type",
        "balance",
        "branch_id",
        "account_routing"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "branch_id": {
          "type": "string",
          "example": "1234"
        },
        "label": {
          "type": "string",
          "example": "Label"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "user_id": {
          "type": "string",
          "example": "66214b8e-259e-44ad-8868-3eb47be70646"
        },
        "type": {
          "type": "string",
          "example": "CURRENT"
        }
      }
    },
    "CachedFunctionJSON": {
      "required": [
        "function_name",
        "ttl_in_seconds"
      ],
      "properties": {
        "ttl_in_seconds": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        },
        "function_name": {
          "type": "string",
          "example": "getBanks"
        }
      }
    },
    "PortJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "8080"
        },
        "property": {
          "type": "string",
          "example": "default"
        }
      }
    },
    "AkkaJSON": {
      "required": [
        "ports",
        "log_level"
      ],
      "properties": {
        "log_level": {
          "type": "string",
          "example": "Debug"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortJSON"
          }
        }
      }
    },
    "MetricsJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "Mapper"
        },
        "property": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "WarehouseJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "ElasticSearch"
        },
        "property": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ElasticSearchJSON": {
      "required": [
        "metrics",
        "warehouse"
      ],
      "properties": {
        "warehouse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarehouseJSON"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsJSON"
          }
        }
      }
    },
    "ConfigurationJSON": {
      "required": [
        "akka",
        "elastic_search",
        "cache"
      ],
      "properties": {
        "cache": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CachedFunctionJSON"
          }
        },
        "elastic_search": {
          "$ref": "#/definitions/ElasticSearchJSON"
        },
        "akka": {
          "$ref": "#/definitions/AkkaJSON"
        }
      }
    },
    "ConnectorMetricJson": {
      "required": [
        "connector_name",
        "function_name",
        "obp_api_request_id",
        "date",
        "duration"
      ],
      "properties": {
        "connector_name": {
          "type": "string",
          "example": "mapper"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": "1000"
        },
        "function_name": {
          "type": "string",
          "example": "getBanks"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 UTC 2013"
        },
        "obp_api_request_id": {
          "type": "string",
          "example": "12345"
        }
      }
    },
    "ConnectorMetricsJson": {
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorMetricJson"
          }
        }
      }
    },
    "ViewJsonV300": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public",
        "alias",
        "hide_metadata_if_alias_used",
        "can_add_comment",
        "can_add_corporate_location",
        "can_add_image",
        "can_add_image_url",
        "can_add_more_info",
        "can_add_open_corporates_url",
        "can_add_physical_location",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_add_tag",
        "can_add_url",
        "can_add_where_tag",
        "can_delete_comment",
        "can_add_counterparty",
        "can_delete_corporate_location",
        "can_delete_image",
        "can_delete_physical_location",
        "can_delete_tag",
        "can_delete_where_tag",
        "can_edit_owner_comment",
        "can_see_bank_account_balance",
        "can_see_bank_account_bank_name",
        "can_see_bank_account_currency",
        "can_see_bank_account_iban",
        "can_see_bank_account_label",
        "can_see_bank_account_national_identifier",
        "can_see_bank_account_number",
        "can_see_bank_account_owners",
        "can_see_bank_account_swift_bic",
        "can_see_bank_account_type",
        "can_see_comments",
        "can_see_corporate_location",
        "can_see_image_url",
        "can_see_images",
        "can_see_more_info",
        "can_see_open_corporates_url",
        "can_see_other_account_bank_name",
        "can_see_other_account_iban",
        "can_see_other_account_kind",
        "can_see_other_account_metadata",
        "can_see_other_account_national_identifier",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_see_owner_comment",
        "can_see_physical_location",
        "can_see_private_alias",
        "can_see_public_alias",
        "can_see_tags",
        "can_see_transaction_amount",
        "can_see_transaction_balance",
        "can_see_transaction_currency",
        "can_see_transaction_description",
        "can_see_transaction_finish_date",
        "can_see_transaction_metadata",
        "can_see_transaction_other_bank_account",
        "can_see_transaction_start_date",
        "can_see_transaction_this_bank_account",
        "can_see_transaction_type",
        "can_see_url",
        "can_see_where_tag",
        "can_see_bank_routing_scheme",
        "can_see_bank_routing_address",
        "can_see_bank_account_routing_scheme",
        "can_see_bank_account_routing_address",
        "can_see_other_bank_routing_scheme",
        "can_see_other_bank_routing_address",
        "can_see_other_account_routing_scheme",
        "can_see_other_account_routing_address"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_bank_account_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "No"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_counterparty": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_bank_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_bank_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ViewsJsonV300": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJsonV300"
          }
        }
      }
    },
    "CoreAccountJsonV300": {
      "required": [
        "id",
        "label",
        "bank_id",
        "account_routing"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "label": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CoreAccountsJsonV300": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreAccountJsonV300"
          }
        }
      }
    },
    "CounterpartyTransferToPhoneJson": {
      "required": [
        "other_account_message",
        "other_account_phone_number"
      ],
      "properties": {
        "other_account_phone_number": {
          "type": "string",
          "example": "+9722398746"
        },
        "other_account_message": {
          "type": "string",
          "example": "Good Luck"
        }
      }
    },
    "CounterpartyTransferToAtmJson": {
      "required": [
        "other_account_owner",
        "other_account_owner_passport_id_or_national_id",
        "other_account_owner_id_type",
        "other_account_owner_birthday",
        "other_account_message",
        "other_account_phone_number"
      ],
      "properties": {
        "other_account_owner": {
          "type": "string",
          "example": "Tom"
        },
        "other_account_phone_number": {
          "type": "string",
          "example": "+9722398746"
        },
        "other_account_owner_passport_id_or_national_id": {
          "type": "string",
          "example": "NationalId"
        },
        "other_account_message": {
          "type": "string",
          "example": "Good Luck"
        },
        "other_account_owner_id_type": {
          "type": "string",
          "example": "ID Type of the money receiver: 1 - National; 5- Passport"
        },
        "other_account_owner_birthday": {
          "type": "string",
          "example": "19900101"
        }
      }
    },
    "TransactionRequestBodyTransferToAtmJson": {
      "required": [
        "value",
        "description",
        "from_account_phone_number",
        "from_account_owner_nickname",
        "charge_policy",
        "couterparty"
      ],
      "properties": {
        "couterparty": {
          "$ref": "#/definitions/CounterpartyTransferToAtmJson"
        },
        "description": {
          "type": "string",
          "example": "This is a TRANSFER_TO_ATM Transaction Request"
        },
        "from_account_owner_nickname": {
          "type": "string",
          "example": "Tom"
        },
        "from_account_phone_number": {
          "type": "string",
          "example": "+9722398746"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "CounterpartyTransferToAccount": {
      "required": [
        "other_account_owner",
        "transfer_type",
        "transfer_is_scheduled",
        "future_date",
        "bank_code",
        "branch_number",
        "account_number",
        "iban"
      ],
      "properties": {
        "transfer_is_scheduled": {
          "type": "string",
          "example": "if the transfer is scheduled to a future date then 1 otherwise 0"
        },
        "future_date": {
          "type": "string",
          "example": "The future date (see K050_SW_ATIDI) if applicable in format YYYYMMDD"
        },
        "branch_number": {
          "type": "string",
          "example": "Branch number of the target account"
        },
        "other_account_owner": {
          "type": "string",
          "example": "Target bank type: 0-Leumi; 1-other bank"
        },
        "account_number": {
          "type": "string",
          "example": "Account number of the target account"
        },
        "transfer_type": {
          "type": "string",
          "example": "Transfer type: 1=regular; 2=RTGS - real time"
        },
        "bank_code": {
          "type": "string",
          "example": "Bank code of the target account"
        },
        "iban": {
          "type": "string",
          "example": "IBAN of the target account for RTGS transfer - if presented then bank/branch/account details are ignored"
        }
      }
    },
    "TransactionRequestBodyTransferToAccount": {
      "required": [
        "value",
        "description",
        "charge_policy",
        "couterparty"
      ],
      "properties": {
        "couterparty": {
          "$ref": "#/definitions/CounterpartyTransferToAccount"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "description": {
          "type": "string",
          "example": "This is a TRANSFER_TO_ACCOUNT Transaction Request"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "NoSupportYet": {
      "properties": {}
    }
  }
}